<?xml version="1.0" encoding="UTF-8"?>
<project name="foxyproxy" default="build-foxyproxy-standard">

  <!-- version property is appended to XPI filename; e.g., foxyproxy-1.0.xpi -->
  <property name="version" value="2.14" />
  <property name="temp-path" value="/tmp/foxyproxy" />
  <property name="src-base" value="."/>
  <property name="target-path" value="../targets"/>
  <property file="edition.properties"/>

  <target name="copy">
    <copy todir="${temp-path}" overwrite="true">
      <!-- ignore timestamps -->
      <fileset dir="${src-base}" excludes="**/*.xpi/**,**/*.jar/**,**/build.xml/**,**/chrome.manifest/**,**/*.project/**,
        **/foxyproxyplus.*/**,**/edition.properties/**" />
    </copy>
  </target>

  <target name="convert-to-foxyproxy-simple">
  
    <!-- uncomment FoxyProxy Simple blocks in JS and CSS files --> 
    <replaceregexp flags="gs">
      <regexp pattern="(\/\*!\s*begin-foxyproxy-simple)(.*?)(end-foxyproxy-simple\s*!\*\/)"/>
      <substitution expression="\1 !*\/\2\/\*! \3"/>
      <fileset dir="${src-path}">
        <patternset id="conditional.sources">
          <include name="**/foxyproxy.css/**"/>
          <include name="**/foxyproxy.js/**"/>
          <include name="**/common.js/**"/>
        </patternset>
      </fileset>
    </replaceregexp>    

    <!-- uncomment FoxyProxy Simple blocks in DTD / XUL / XML / HTMTL files -->   
    <replaceregexp flags="gs">
      <regexp pattern="(&lt;!--\s*begin-foxyproxy-simple)(.*?)(end-foxyproxy-simple\s*--&gt;)"/>
      <substitution expression="\1 --&gt;\2&lt;!-- \3"/>
      <fileset dir="${src-path}">
        <patternset id="xml.conditional.sources">
          <include name="**/foxyproxy.dtd/**"/>
          <include name="**/firefoxOverlay.xul/**"/>
          <include name="**/install.rdf/**"/>
        </patternset>
      </fileset>
    </replaceregexp>  

    <!-- comment out FoxyProxy Standard blocks in DTD / XUL / XML / HTMTL files -->  
    <replaceregexp flags="gs">
      <regexp pattern="(&lt;!--\s*begin-foxyproxy-standard\s*)(--&gt;)(.*?)(&lt;!--\s*)(end-foxyproxy-standard\s*--&gt;)"/>
      <substitution expression="\1\3\5"/>
      <fileset dir="${src-path}">
        <patternset refid="xml.conditional.sources"/>
      </fileset>
    </replaceregexp> 
    
    <!-- comment out FoxyProxy Standard blocks in JS & CSS files -->    
    <replaceregexp flags="gs">
      <regexp pattern="(\/\*!\s*begin-foxyproxy-standard\s*)(!\*\/)(.*?)(\/\*!\s*)(end-foxyproxy-standard\s*!\*\/)"/>
      <substitution expression="\1\3\5"/>
      <fileset dir="${src-path}">
        <patternset refid="conditional.sources"/>
      </fileset>
    </replaceregexp>  
    
    <!-- replace UUID 
      
    <replaceregexp flags="gs">
      <regexp pattern="(foxyproxy@eric.h.jung)"/>
      <substitution expression="foxyproxysimple@eric.h.jung"/>
      <fileset dir="${temp-path}" includes="**/*/**"/>
    </replaceregexp>  
     -->    
        
  </target>    

  <target name="convert-to-foxyproxy-standard">
  
    <!-- comment out FoxyProxy Simple blocks in JS and CSS files --> 
    <replaceregexp flags="gs">
      <regexp pattern="(\/\*!\s*begin-foxyproxy-simple)(\s*!\*\/)(.*?)(\/\*!\s*)(end-foxyproxy-simple\s*!\*\/)"/>
      <substitution expression="\1\3\5"/>
      <fileset dir="${src-path}">
        <patternset refid="conditional.sources"/>
      </fileset>
    </replaceregexp>    

    <!-- comment out FoxyProxy Simple blocks in DTD / XUL / XML / HTMTL files -->  
    <replaceregexp flags="gs">
      <regexp pattern="(&lt;!--\s*begin-foxyproxy-simple\s*)(--&gt;)(.*?)(&lt;!--\s*)(end-foxyproxy-simple\s*--&gt;)"/>
      <substitution expression="\1\3\5"/>
      <fileset dir="${src-path}">
        <patternset refid="xml.conditional.sources"/>
      </fileset>
    </replaceregexp> 
            
    <!-- uncomment FoxyProxy Standard blocks in JS and CSS files -->    
    <replaceregexp flags="gs">
      <regexp pattern="(\/\*!\s*begin-foxyproxy-standard)(.*?)(end-foxyproxy-standard\s*!\*\/)"/>
      <substitution expression="\1 !\*\/\2\/\*! \3"/>
      <fileset dir="${src-path}">
        <patternset refid="conditional.sources"/>
      </fileset>
    </replaceregexp>  

    <!-- uncomment FoxyProxy Standard blocks in DTD / XUL / XML / HTMTL files -->  
    <replaceregexp flags="gs">
      <regexp pattern="(&lt;!--\s*begin-foxyproxy-standard)(.*?)(end-foxyproxy-standard\s*--&gt;)"/>
      <substitution expression="\1 --&gt;\2&lt;!-- \3"/>
      <fileset dir="${src-path}">
        <patternset refid="xml.conditional.sources"/>
      </fileset>
    </replaceregexp> 
    
    <!-- replace UUID 
      
    <replaceregexp flags="gs">
      <regexp pattern="(foxyproxy@eric.h.jung)"/>
      <substitution expression="foxyproxysimple@eric.h.jung"/>
      <fileset dir="${temp-path}" includes="**/*/**"/>
    </replaceregexp>  
     -->      
  </target>

  <!-- create the jar -->
  <target name="jar">
    <zip destfile="${temp-path}/chrome/foxyproxy.jar">
      <zipfileset dir="${temp-path}/content" prefix="content" includes="**/**" />
      <zipfileset dir="${temp-path}/skin" prefix="skin" includes="**/**" />
      <zipfileset dir="${temp-path}/locale" prefix="locale" includes="**/**" />
    </zip>
  </target>

  <!-- create foxyproxy-x.y.z.xpi in the current dir using install.rdf in the current dir -->
  <target name="build">
    <copy file="chrome.manifest.packaging" tofile="${temp-path}/chrome.manifest" />
    <zip destfile="${target-path}/foxyproxy-${version}.xpi">
      <fileset dir="${temp-path}" includes="chrome.manifest install.rdf install.js LICENSE chrome/" />
      <zipfileset dir="${temp-path}" prefix="chrome" includes="content/**"/>
      <zipfileset dir="${temp-path}" prefix="chrome" includes="skin/**"/>
      <zipfileset dir="${temp-path}" prefix="chrome" includes="locale/**"/>
      <zipfileset dir="${temp-path}/components" prefix="components" includes="**/**" />
      <zipfileset dir="${temp-path}/modules" prefix="modules" includes="**/**" />     
      <zipfileset dir="${temp-path}/defaults" prefix="defaults" includes="**/**" />
    </zip>
  </target>

  <target name="clean">
    <delete dir="${temp-path}" failonerror="false" />
  </target>

  <target name="init">
    <mkdir dir="${temp-path}" />
    <mkdir dir="${target-path}" />    
    <delete>
      <fileset dir="${target-path}" includes="**/*.*/**"/>
    </delete>
  </target>

  <!--<target name="build-xpi" depends="init,copy,jar,build,clean" />-->
  <target name="build-foxyproxy-standard" depends="init,copy,build,clean" />
  <target name="build-foxyproxy-simple" depends="init">
    <property name="src-path" value="${temp-path}"/>
    <antcall>
      <target name="copy"/>
      <param name="src-path" value="${temp-path}"/>
      <target name="convert-to-foxyproxy-simple"/>
      <target name="build"/>
      <!-- <target name="clean"/> -->
    </antcall>
  </target>
    
  <target name="convert-to-foxyproxy-simple-for-development" if="standard">    
    <antcall>
      <param name="src-path" value="${src-base}"/>
      <target name="convert-to-foxyproxy-simple"/>
    </antcall>
    <!-- The <propertyfile/> task appends to the property file, but we want to overwrite -->
    <echo file="edition.properties" message="simple=true"/>
  </target>
  
  <target name="convert-to-foxyproxy-standard-for-development" if="simple">
    <antcall>
      <param name="src-path" value="${src-base}"/>
      <target name="convert-to-foxyproxy-standard"/>
    </antcall>
    <!-- The <propertyfile/> task appends to the property file, but we want to overwrite -->
    <echo file="edition.properties" message="standard=true"/>
  </target>  
</project>
